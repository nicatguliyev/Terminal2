Index: app/src/main/java/com/example/niguliyev/terminal/DownloadTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.niguliyev.terminal;\r\n\r\nimport android.Manifest;\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Environment;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.FileProvider;\r\n\r\nimport android.os.Bundle;\r\nimport android.telephony.TelephonyManager;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.NoConnectionError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.ServerError;\r\nimport com.android.volley.TimeoutError;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.downloader.OnCancelListener;\r\nimport com.downloader.OnDownloadListener;\r\nimport com.downloader.OnPauseListener;\r\nimport com.downloader.OnProgressListener;\r\nimport com.downloader.OnStartOrResumeListener;\r\nimport com.downloader.PRDownloader;\r\nimport com.downloader.PRDownloaderConfig;\r\nimport com.downloader.Progress;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.OutputStream;\r\nimport java.io.UnsupportedEncodingException;\r\nimport java.math.BigInteger;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.net.URLConnection;\r\nimport java.net.URLDecoder;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.MessageDigest;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport static android.view.View.VISIBLE;\r\n\r\npublic class DownloadTest extends AppCompatActivity {\r\n\r\n    Button downloadBtn;\r\n    private ProgressDialog pDialog;\r\n    ImageView image;\r\n    String version = \"4\";\r\n    String updateUrl = \"https://test-ticket.ady.az/terminal_service.php\";\r\n    ProgressDialog dialog;\r\n    Date currentTime = new Date();\r\n    SimpleDateFormat sdf = new SimpleDateFormat(\"yy-MM-dd hh:mm:ss\");\r\n    RelativeLayout infolyt;\r\n    Button tryBtn;\r\n    Toast toast;\r\n\r\n    public static final int progressType = 0;\r\n    private static String fileUrl = \"\";\r\n    public static String deviceId = \"\";\r\n    private static final int MY_PERMISSIONS_REQUEST_READ_PHONE_STATE = 0;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_download_test);\r\n        // Download Test\r\n        downloadBtn = findViewById(R.id.yukleBtn);\r\n        image = findViewById(R.id.imageV);\r\n        tryBtn = findViewById(R.id.tryBtn);\r\n        System.out.println();\r\n\r\n\r\n        dialog = new ProgressDialog(DownloadTest.this);\r\n        dialog.setCanceledOnTouchOutside(false);\r\n        dialog.setMessage(\"Zəhmət olmasa gözləyin..\");\r\n        infolyt = findViewById(R.id.infoLyt);\r\n        infolyt.setVisibility(View.GONE);\r\n\r\n\r\n//        SharedPreferences prefs = getSharedPreferences(\"PREF\", MODE_PRIVATE);\r\n//        deviceId = prefs.getString(\"DEVICEID\", \"\");\r\n//\r\n//        if(deviceId.equals(\"\")){\r\n//            SharedPreferences.Editor editor = getSharedPreferences(\"PREF\", MODE_PRIVATE).edit();\r\n//            editor.putString(\"name\", \"Elena\");\r\n//        }\r\n\r\n        tryBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                infolyt.setVisibility(View.GONE);\r\n                dialog.show();\r\n                currentTime = Calendar.getInstance().getTime();\r\n                checkVersion();\r\n            }\r\n        });\r\n\r\n\r\n\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) != PackageManager.PERMISSION_GRANTED) {\r\n\r\n            requestReadPhoneStatePermission();\r\n\r\n        } else {\r\n            doPermissionGrantedStuffs();\r\n            if (ContextCompat.checkSelfPermission(DownloadTest.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n                currentTime = Calendar.getInstance().getTime();\r\n                dialog.show();\r\n                checkVersion();\r\n            } else\r\n            {\r\n                requestStoragePermission();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void doPermissionGrantedStuffs() {\r\n        //Have an  object of TelephonyManager\r\n        TelephonyManager tm = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) != PackageManager.PERMISSION_GRANTED) {\r\n            return;\r\n        }\r\n        else{\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                //Log.i(\"DeviceId\", String.valueOf(tm.getImei()));\r\n                deviceId = String.valueOf(tm.getImei());\r\n            }\r\n            else\r\n            {\r\n               // Log.i(\"DeviceId\", String.valueOf(tm.getDeviceId()));\r\n                 deviceId = String.valueOf(tm.getDeviceId());\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private void requestReadPhoneStatePermission() {\r\n        if (ActivityCompat.shouldShowRequestPermissionRationale(this,\r\n                Manifest.permission.READ_PHONE_STATE)) {\r\n            new AlertDialog.Builder(DownloadTest.this)\r\n                    .setTitle(\"Permission Request\")\r\n                    .setMessage(\"Allow Permission\")\r\n                    .setCancelable(false)\r\n                    .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            //re-request\r\n                            ActivityCompat.requestPermissions(DownloadTest.this,\r\n                                    new String[]{Manifest.permission.READ_PHONE_STATE},\r\n                                    MY_PERMISSIONS_REQUEST_READ_PHONE_STATE);\r\n                        }\r\n                    })\r\n                    .show();\r\n        } else {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_PHONE_STATE},\r\n                    MY_PERMISSIONS_REQUEST_READ_PHONE_STATE);\r\n        }\r\n    }\r\n\r\n    private void requestStoragePermission(){\r\n        if (ActivityCompat.shouldShowRequestPermissionRationale(this,\r\n                Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\r\n\r\n            new AlertDialog.Builder(this)\r\n                    .setTitle(\"Permission needed\")\r\n                    .setMessage(\"This permission is needed because of this and that\")\r\n                    .setPositiveButton(\"ok\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            ActivityCompat.requestPermissions(DownloadTest.this,\r\n                                    new String[] {Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);\r\n                        }\r\n                    })\r\n                    .setNegativeButton(\"cancel\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            dialog.dismiss();\r\n                        }\r\n                    })\r\n                    .create().show();\r\n\r\n        } else {\r\n            ActivityCompat.requestPermissions(this,\r\n                    new String[] {Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        if (requestCode == 1)  {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                checkVersion();\r\n            } else {\r\n            }\r\n        }\r\n        if (requestCode == MY_PERMISSIONS_REQUEST_READ_PHONE_STATE) {\r\n            if (grantResults.length == 1 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    doPermissionGrantedStuffs();\r\n                if (ContextCompat.checkSelfPermission(DownloadTest.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n                    currentTime = Calendar.getInstance().getTime();\r\n                    dialog.show();\r\n                    checkVersion();\r\n                } else\r\n                {\r\n                    requestStoragePermission();\r\n                }\r\n\r\n            } else {\r\n                alertAlert(\"Permission Read_PHONE is not granted\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private void checkVersion(){\r\n         dialog.show();\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, updateUrl, new Response.Listener<String>() {\r\n\r\n            @Override\r\n            public void onResponse(String response) {//\r\n                //Log.i(\"MMMUU\", response);\r\n                dialog.dismiss();\r\n                try {\r\n\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    String result = jsonObject.getString(\"result\");\r\n                    if(result.equals(\"1\")){\r\n                        JSONArray dataArray = jsonObject.getJSONArray(\"data\");\r\n                        JSONObject jsonObject2 = dataArray.getJSONObject(0);\r\n                        String lastVersion = jsonObject2.getString(\"version\");\r\n                         String url = jsonObject2.getString(\"download_url\");\r\n                          fileUrl = URLDecoder.decode(url, StandardCharsets.UTF_8.toString());\r\n                         Log.i(\"NNNMMM\", url);\r\n\r\n                        if(!(version.equals(lastVersion))){\r\n                           // new DownloadImage().execute(fileUrl);\r\n                            startDownload(url);\r\n                        }\r\n                        else\r\n                        {\r\n                           Intent intent = new Intent(DownloadTest.this, Login.class);\r\n                           startActivity(intent);\r\n                           finish();\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        Toast.makeText(getApplicationContext(), \"Xəta baş verdi: Invalid parameter\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                } catch (Exception e) {\r\n                    Toast.makeText(getApplicationContext(), \"Json Error\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n\r\n                dialog.dismiss();\r\n                infolyt.setVisibility(VISIBLE);\r\n                if (error instanceof NoConnectionError) {\r\n                    showToast(\"İnternetə qoşulmayıb\", Toast.LENGTH_SHORT);\r\n                }\r\n                else if (error instanceof TimeoutError) {\r\n                    showToast(\"Timeout xəta\", Toast.LENGTH_SHORT);\r\n                }\r\n                else if (error instanceof ServerError) {\r\n\r\n                    showToast(\"Server xətası: \" + error.networkResponse.statusCode, Toast.LENGTH_SHORT);\r\n                }\r\n                else{\r\n                    showToast(\"Bilinməyən xəta: \" + String.valueOf(error.networkResponse.statusCode), Toast.LENGTH_SHORT);\r\n                }\r\n            }\r\n        }) {\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                String reqDate = sdf.format(currentTime);\r\n                String token = convertPassMd5(convertPassMd5(\"1\"+deviceId+reqDate));\r\n                Map<String, String> params = new HashMap<>();\r\n                params.put(\"action\", \"t_version_control\");\r\n                params.put(\"soft_id\", \"1\");\r\n                params.put(\"secure_code\", \"t1e2r3m4i5n6a7l8\");\r\n                params.put(\"terminal_id\", deviceId);\r\n                params.put(\"request_dt\", reqDate);\r\n                params.put(\"token\", token);\r\n\r\n                return  params;\r\n            }\r\n        };\r\n\r\n        RequestQueue requestQueue = Volley.newRequestQueue(this);\r\n        requestQueue.add(stringRequest);\r\n    }\r\n\r\n\r\n\r\n    public static String convertPassMd5(String pass) {\r\n        String password = null;\r\n        MessageDigest mdEnc;\r\n        try {\r\n            mdEnc = MessageDigest.getInstance(\"MD5\");\r\n            mdEnc.update(pass.getBytes(), 0, pass.length());\r\n            pass = new BigInteger(1, mdEnc.digest()).toString(16);\r\n            while (pass.length() < 32) {\r\n                pass = \"0\" + pass;\r\n            }\r\n            password = pass;\r\n        } catch (NoSuchAlgorithmException e1) {\r\n            e1.printStackTrace();\r\n        }\r\n        return password;\r\n    }\r\n\r\n    @Override\r\n    protected Dialog onCreateDialog(int id) {\r\n        switch (id){\r\n            case progressType:\r\n                pDialog = new ProgressDialog(this);\r\n                pDialog.setMessage(\"Zəhmət olmasa gözləyin\");\r\n                pDialog.setIndeterminate(false);\r\n                pDialog.setMax(100);\r\n                pDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\r\n                pDialog.setCancelable(false);\r\n                pDialog.show();\r\n                return pDialog;\r\n                default:\r\n                    return null;\r\n        }\r\n    }\r\n\r\n    class DownloadImage extends AsyncTask<String, String, String>{\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            super.onPreExecute();\r\n            showDialog(progressType);\r\n        }\r\n\r\n        @Override\r\n        protected String doInBackground(String... fileUrl) {\r\n            int count;\r\n            try{\r\n                URL url = new URL(fileUrl[0]);\r\n                URLConnection connection = url.openConnection();\r\n                connection.connect();\r\n\r\n                int lengthOfFile = connection.getContentLength();\r\n\r\n                InputStream inputStream = new BufferedInputStream(url.openStream(), 8192);\r\n\r\n                String storageDir = Environment.getExternalStorageDirectory().getAbsolutePath();\r\n                String fileName = \"/terminal.apk\";\r\n                File imageFile = new File(directory() + fileName);\r\n                OutputStream outputStream = new FileOutputStream(imageFile);\r\n\r\n                byte data[] = new byte[1024];\r\n                long total = 0;\r\n\r\n                while ((count = inputStream.read(data)) != -1){\r\n                    total = total + count;\r\n                    publishProgress(\"\" +(int)((total*100)/lengthOfFile));\r\n                    outputStream.write(data, 0, count);\r\n                }\r\n                outputStream.flush();\r\n                outputStream.close();\r\n\r\n            } catch (MalformedURLException e) {\r\n                e.printStackTrace();\r\n                Log.i(\"Xeta\", \"Xeta1\");\r\n            } catch (IOException e) {\r\n                runOnUiThread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        infolyt.setVisibility(VISIBLE);\r\n                    }\r\n                });\r\n                e.printStackTrace();\r\n               // Log.i(\"Xeta\", \"Xeta2\");\r\n            }\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        protected void onProgressUpdate(String... values) {\r\n            pDialog.setProgress(Integer.parseInt(values[0]));\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String s) {\r\n           // dismissDialog(progressType);\r\n           // Log.i(\"TESTT\", \"Testt\");\r\n            finish();\r\n            Intent intent = new Intent(Intent.ACTION_VIEW);\r\n            Uri apkUri = FileProvider.getUriForFile(getApplicationContext(), getApplicationContext().getPackageName()+\".provider\",\r\n                    new File(directory()+\"/terminal.apk\") );\r\n            intent.setDataAndType(apkUri, \"application/vnd.android.package-archive\");\r\n            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\r\n            startActivity(intent);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void alertAlert(String msg) {\r\n        new AlertDialog.Builder(DownloadTest.this)\r\n                .setTitle(\"Permission Request\")\r\n                .setMessage(msg)\r\n                .setCancelable(false)\r\n                .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // do somthing here\r\n                    }\r\n                })\r\n\r\n                .show();\r\n    }\r\n\r\n    public  void showToast(String txt, int duration){\r\n        if(toast != null){\r\n            toast.cancel();\r\n            toast = Toast.makeText(getApplicationContext(), txt, duration);\r\n            toast.show();\r\n        }else{\r\n            toast = Toast.makeText(getApplicationContext(), txt, duration);\r\n            toast.show();\r\n        }\r\n    }\r\n\r\n    private String directory() {\r\n        return Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();\r\n    }\r\n\r\n    private void startDownload(String url) {\r\n\r\n        final ProgressDialog progressDialog = new ProgressDialog(this);\r\n        progressDialog.setTitle(\"Downloading .... \");\r\n        progressDialog.setMessage(\"Preparing....\");\r\n        progressDialog.setCancelable(false);\r\n\r\n        progressDialog.show();\r\n\r\n        PRDownloaderConfig config = PRDownloaderConfig.newBuilder()\r\n                .setReadTimeout(30_000)\r\n                .setConnectTimeout(30_000)\r\n                .build();\r\n        PRDownloader.initialize(getApplicationContext(), config);\r\n        final int downloadId = PRDownloader.download(url,\r\n                directory(), \"terminal.apk\")\r\n                .build()\r\n                .setOnStartOrResumeListener(new OnStartOrResumeListener() {\r\n                    @Override\r\n                    public void onStartOrResume() {\r\n\r\n                    }\r\n                })\r\n                .setOnPauseListener(new OnPauseListener() {\r\n                    @Override\r\n                    public void onPause() {\r\n\r\n                    }\r\n                })\r\n                .setOnCancelListener(new OnCancelListener() {\r\n                    @Override\r\n                    public void onCancel() {\r\n\r\n                    }\r\n                })\r\n                .setOnProgressListener(new OnProgressListener() {\r\n                    @Override\r\n                    public void onProgress(Progress progress) {\r\n                        progressDialog.setMessage(\"PROGRESS\");\r\n                    }\r\n                })\r\n                .start(new OnDownloadListener() {\r\n\r\n                    @Override\r\n                    public void onDownloadComplete() {\r\n                        progressDialog.setMessage(\"COMPLETE\");\r\n                        progressDialog.dismiss();\r\n                        Log.i(\"APKURL\", directory());\r\n                        Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                        Uri apkUri = FileProvider.getUriForFile(getApplicationContext(), getApplicationContext().getPackageName() + \".provider\",\r\n                                new File(directory() + \"/tttt.apk\"));\r\n                       intent.setDataAndType(apkUri,\r\n                               \"application/vnd.android.package-archive\");\r\n                        intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\r\n                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                        startActivity(intent);\r\n                        Log.i(\"Sagopa\", \"Sagopa\");\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(com.downloader.Error error) {\r\n                        progressDialog.setMessage(\"ERROR\");\r\n                        Log.i(\"Erroooor\", String.valueOf(error.getConnectionException()));\r\n                    }\r\n\r\n                });\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/niguliyev/terminal/DownloadTest.java b/app/src/main/java/com/example/niguliyev/terminal/DownloadTest.java
--- a/app/src/main/java/com/example/niguliyev/terminal/DownloadTest.java	
+++ b/app/src/main/java/com/example/niguliyev/terminal/DownloadTest.java	
@@ -514,14 +514,15 @@
                         progressDialog.setMessage("COMPLETE");
                         progressDialog.dismiss();
                         Log.i("APKURL", directory());
-                        Intent intent = new Intent(Intent.ACTION_VIEW);
-                        Uri apkUri = FileProvider.getUriForFile(getApplicationContext(), getApplicationContext().getPackageName() + ".provider",
-                                new File(directory() + "/tttt.apk"));
-                       intent.setDataAndType(apkUri,
-                               "application/vnd.android.package-archive");
-                        intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
-                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                        startActivity(intent);
+//                        Intent intent = new Intent(Intent.ACTION_VIEW);
+//                        Uri apkUri = FileProvider.getUriForFile(getApplicationContext(), getApplicationContext().getPackageName() + ".provider",
+//                                new File(directory() + "/tttt.apk"));
+//                       intent.setDataAndType(apkUri,
+//                               "application/vnd.android.package-archive");
+//                        intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
+//                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+//                        startActivity(intent);
+                        
                         Log.i("Sagopa", "Sagopa");
 
                     }
